Interview
405 method not found.
*** first time i use git even  i upload appsetting then I comes to know ,want use gitignore.

*** Genric repository ,replace productType with place holder and compile time placed with actual type.
*** public ICollection<Model> Models { get; set; }
 //make.Models=new Collection<Model>()//here and forget to initialize it somewhere else in the code you're
       going to get a null reference exception.

//better use constructor to intialize ther
public make()
{
Models = new Collection<Model>();
}


*** large dtabase round trip is okey,load model with make better small db


composit primary key-uniquely identify vehicle table with two column, then we know given fetaures is not dup;licated on given vehicle.

IAction Result==In whci we can return razor views,json objects,http responses

ProductController:ControllerBase


dotnet --info
  get host vesrion 3.1.8

go nuget package 
   Microsoft.EntityFrameworkCore
	 Microsoft.EntityFrameworkCore.Sqlite

	3.1.8

Git
---
git status

git init

git remote add origin https://github.com/abhilashkuttath/sklogic.git
git branch -M main
git push -u origin main

hre i used git push origin master --force   //thi scommand

repository pattern
-------------
decouple bussiness code and data access
separation of concern
minimise duplicate qury logic
testability.

for depndency injection need to add configure service,no importance in position
but in middelware servcice oreder is important.

lifetime is like scoped
  tranceint for individual method ,short life time,repository will create and destroy on bases of individual method.
singleton  --nver will destroy untill the application shut down.
addcoped  --


added new domain class so,I just drop and  recreate db


dotnet ef database drop -p Infrastructure -s API        //hr

C:\AngularProjects\skinett>dotnet ef migrations remove -p Infrastructure -s API

C:\AngularProjects\skinett>dotnet ef database drop -p Infrastructure -s API

recraete
 C:\AngularProjects\skinett>dotnet ef migrations add InitialCreate -p Infrastructure -s API -o Data/Migrations

---------------------------
https://selfregistration.cowin.gov.in/appointment
https://selfregistration.cowin.gov.in/


firstordefault
siggleOrDefault == If have more then one element show exception

Iquirable = chaining


git add .
git commit -m "End of section3"
git push origin master

int? brandId, int? typeId


--------
ng new CLient //new project start in angular


cd src/app  - entering into app folder

ng g c nav-bar --skip-tests
ng g c --help


when give position absolute should give parent relative.

ngOnChanges()
-----------
respond when data bound input property change.works before ngOnInit.

ngOnInit()
----------
best for api calles
ngDocheck
----------
imediately after onchages and oninit.


Observable
----------
sequence of items that arrive asynchrounously over time.


module
-----
common module include ng For

module always in import


ng g c shop --flat --skip-tests  //inside shop folder,it alresy creqate when i created module
ng g c shop --flat --skip-tests
ng g s shop --skip-tests --flat
ng g m shop-routing --flat


Angular Service
---------
Angular service are single threaded,they are intitialized when application start.
good place to call http services, and api calls.

put root in service page so dont want to initailize in app module

Automapper
----------
for flattening response.result may hav eaditional array.

we dont add port number on databsae ,auto mapper we can specifically
   adjust like, photo url.
nuget

AutoMapper.Extensions.Microsoft

installed 7.0.0

return Ok(await _repo.GetProductByIdAsync(id));


 public async Task<ActionResult<Product>> GetProduct(int id)
        {
            var product = await _repo.GetProductByIdAsync(id);
            return _mapper.Map<Product, ProductToReturnDto>(product);

        }



 public async Task<Actiommmmmmm  Id=product.Id,
                Name = product.Name
            }
            return _mapper.Map<Product, ProductToReturnDto>(product);

        }
jn mmmmmmmmmmmmm


public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public decimal Price { get; set; }
        public string PictureUrl { get; set; }
        public string ProductBrand { get; set; }
        public string ProductType { get; set; }


git
---
git push origin master


routerLink

<RouterOutlet><RouterOutlet>


APi Error Handling
------------------